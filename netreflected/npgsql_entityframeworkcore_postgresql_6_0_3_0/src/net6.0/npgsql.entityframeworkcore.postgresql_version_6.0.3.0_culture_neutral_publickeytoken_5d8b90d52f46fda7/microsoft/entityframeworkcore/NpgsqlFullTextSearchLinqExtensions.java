/*
 *  MIT License
 *
 *  Copyright (c) 2022 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package microsoft.entityframeworkcore;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import npgsqltypes.NpgsqlTsQuery;
import npgsqltypes.NpgsqlTsVector;
import system.Single;
import microsoft.entityframeworkcore.NpgsqlTsRankingNormalization;


/**
 * The base .NET class managing Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions, Npgsql.EntityFrameworkCore.PostgreSQL, Version=6.0.3.0, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7.
 * <p>
 * 
 * See: <a href="https://docs.microsoft.com/en-us/dotnet/api/Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions" target="_top">https://docs.microsoft.com/en-us/dotnet/api/Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions</a>
 */
public class NpgsqlFullTextSearchLinqExtensions extends NetObject  {
    /**
     * Fully assembly qualified name: Npgsql.EntityFrameworkCore.PostgreSQL, Version=6.0.3.0, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7
     */
    public static final String assemblyFullName = "Npgsql.EntityFrameworkCore.PostgreSQL, Version=6.0.3.0, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7";
    /**
     * Assembly name: Npgsql.EntityFrameworkCore.PostgreSQL
     */
    public static final String assemblyShortName = "Npgsql.EntityFrameworkCore.PostgreSQL";
    /**
     * Qualified class name: Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions
     */
    public static final String className = "Microsoft.EntityFrameworkCore.NpgsqlFullTextSearchLinqExtensions";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public NpgsqlFullTextSearchLinqExtensions(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link NpgsqlFullTextSearchLinqExtensions}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link NpgsqlFullTextSearchLinqExtensions} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static NpgsqlFullTextSearchLinqExtensions cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new NpgsqlFullTextSearchLinqExtensions(from.getJCOInstance());
    }

    // Constructors section
    
    public NpgsqlFullTextSearchLinqExtensions() throws Throwable {
    }

    
    // Methods section
    
    public static boolean Contains(NpgsqlTsQuery query1, NpgsqlTsQuery query2) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (boolean)classType.Invoke("Contains", query1 == null ? null : query1.getJCOInstance(), query2 == null ? null : query2.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean IsContainedIn(NpgsqlTsQuery query1, NpgsqlTsQuery query2) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (boolean)classType.Invoke("IsContainedIn", query1 == null ? null : query1.getJCOInstance(), query2 == null ? null : query2.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean Matches(NpgsqlTsVector vector, NpgsqlTsQuery query) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (boolean)classType.Invoke("Matches", vector == null ? null : vector.getJCOInstance(), query == null ? null : query.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean Matches(NpgsqlTsVector vector, java.lang.String query) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (boolean)classType.Invoke("Matches", vector == null ? null : vector.getJCOInstance(), query);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int GetLength(NpgsqlTsVector vector) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (int)classType.Invoke("GetLength", vector == null ? null : vector.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int GetNodeCount(NpgsqlTsQuery query) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (int)classType.Invoke("GetNodeCount", query == null ? null : query.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsQuery And(NpgsqlTsQuery query1, NpgsqlTsQuery query2) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objAnd = (JCObject)classType.Invoke("And", query1 == null ? null : query1.getJCOInstance(), query2 == null ? null : query2.getJCOInstance());
            return new NpgsqlTsQuery(objAnd);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsQuery Or(NpgsqlTsQuery query1, NpgsqlTsQuery query2) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objOr = (JCObject)classType.Invoke("Or", query1 == null ? null : query1.getJCOInstance(), query2 == null ? null : query2.getJCOInstance());
            return new NpgsqlTsQuery(objOr);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsQuery Rewrite(NpgsqlTsQuery query, NpgsqlTsQuery target, NpgsqlTsQuery substitute) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objRewrite = (JCObject)classType.Invoke("Rewrite", query == null ? null : query.getJCOInstance(), target == null ? null : target.getJCOInstance(), substitute == null ? null : substitute.getJCOInstance());
            return new NpgsqlTsQuery(objRewrite);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsQuery ToNegative(NpgsqlTsQuery query) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objToNegative = (JCObject)classType.Invoke("ToNegative", query == null ? null : query.getJCOInstance());
            return new NpgsqlTsQuery(objToNegative);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsQuery ToPhrase(NpgsqlTsQuery query1, NpgsqlTsQuery query2, int distance) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objToPhrase = (JCObject)classType.Invoke("ToPhrase", query1 == null ? null : query1.getJCOInstance(), query2 == null ? null : query2.getJCOInstance(), distance);
            return new NpgsqlTsQuery(objToPhrase);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsQuery ToPhrase(NpgsqlTsQuery query1, NpgsqlTsQuery query2) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objToPhrase = (JCObject)classType.Invoke("ToPhrase", query1 == null ? null : query1.getJCOInstance(), query2 == null ? null : query2.getJCOInstance());
            return new NpgsqlTsQuery(objToPhrase);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsVector Concat(NpgsqlTsVector vector1, NpgsqlTsVector vector2) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objConcat = (JCObject)classType.Invoke("Concat", vector1 == null ? null : vector1.getJCOInstance(), vector2 == null ? null : vector2.getJCOInstance());
            return new NpgsqlTsVector(objConcat);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsVector Delete(NpgsqlTsVector vector, java.lang.String lexeme) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDelete = (JCObject)classType.Invoke("Delete", vector == null ? null : vector.getJCOInstance(), lexeme);
            return new NpgsqlTsVector(objDelete);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsVector Delete(NpgsqlTsVector vector, java.lang.String[] lexemes) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDelete = (JCObject)classType.Invoke("Delete", vector == null ? null : vector.getJCOInstance(), lexemes);
            return new NpgsqlTsVector(objDelete);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsVector Delete(NpgsqlTsVector dupParam0, JCORefOut dupParam1) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objDelete = (JCObject)classType.Invoke("Delete", dupParam0 == null ? null : dupParam0.getJCOInstance(), dupParam1.getJCRefOut());
            return new NpgsqlTsVector(objDelete);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsVector Filter(NpgsqlTsVector vector, char[] weights) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objFilter = (JCObject)classType.Invoke("Filter", vector == null ? null : vector.getJCOInstance(), weights);
            return new NpgsqlTsVector(objFilter);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsVector Filter(NpgsqlTsVector dupParam0, JCORefOut dupParam1) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objFilter = (JCObject)classType.Invoke("Filter", dupParam0 == null ? null : dupParam0.getJCOInstance(), dupParam1.getJCRefOut());
            return new NpgsqlTsVector(objFilter);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsVector SetWeight(NpgsqlTsVector vector, char weight, java.lang.String[] lexemes) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objSetWeight = (JCObject)classType.Invoke("SetWeight", vector == null ? null : vector.getJCOInstance(), weight, lexemes);
            return new NpgsqlTsVector(objSetWeight);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsVector SetWeight(NpgsqlTsVector dupParam0, char dupParam1, JCORefOut dupParam2) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objSetWeight = (JCObject)classType.Invoke("SetWeight", dupParam0 == null ? null : dupParam0.getJCOInstance(), dupParam1, dupParam2.getJCRefOut());
            return new NpgsqlTsVector(objSetWeight);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsVector SetWeight(NpgsqlTsVector vector, char weight) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objSetWeight = (JCObject)classType.Invoke("SetWeight", vector == null ? null : vector.getJCOInstance(), weight);
            return new NpgsqlTsVector(objSetWeight);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NpgsqlTsVector ToStripped(NpgsqlTsVector vector) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objToStripped = (JCObject)classType.Invoke("ToStripped", vector == null ? null : vector.getJCOInstance());
            return new NpgsqlTsVector(objToStripped);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Single Rank(NpgsqlTsVector vector, NpgsqlTsQuery query, NpgsqlTsRankingNormalization normalization) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objRank = (JCObject)classType.Invoke("Rank", vector == null ? null : vector.getJCOInstance(), query == null ? null : query.getJCOInstance(), normalization == null ? null : normalization.getJCOInstance());
            return new Single(objRank);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Single Rank(NpgsqlTsVector vector, NpgsqlTsQuery query) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objRank = (JCObject)classType.Invoke("Rank", vector == null ? null : vector.getJCOInstance(), query == null ? null : query.getJCOInstance());
            return new Single(objRank);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Single Rank(NpgsqlTsVector vector, Single[] weights, NpgsqlTsQuery query, NpgsqlTsRankingNormalization normalization) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objRank = (JCObject)classType.Invoke("Rank", vector == null ? null : vector.getJCOInstance(), toObjectFromArray(weights), query == null ? null : query.getJCOInstance(), normalization == null ? null : normalization.getJCOInstance());
            return new Single(objRank);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Single Rank(NpgsqlTsVector vector, Single[] weights, NpgsqlTsQuery query) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objRank = (JCObject)classType.Invoke("Rank", vector == null ? null : vector.getJCOInstance(), toObjectFromArray(weights), query == null ? null : query.getJCOInstance());
            return new Single(objRank);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Single RankCoverDensity(NpgsqlTsVector vector, NpgsqlTsQuery query, NpgsqlTsRankingNormalization normalization) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objRankCoverDensity = (JCObject)classType.Invoke("RankCoverDensity", vector == null ? null : vector.getJCOInstance(), query == null ? null : query.getJCOInstance(), normalization == null ? null : normalization.getJCOInstance());
            return new Single(objRankCoverDensity);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Single RankCoverDensity(NpgsqlTsVector vector, NpgsqlTsQuery query) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objRankCoverDensity = (JCObject)classType.Invoke("RankCoverDensity", vector == null ? null : vector.getJCOInstance(), query == null ? null : query.getJCOInstance());
            return new Single(objRankCoverDensity);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Single RankCoverDensity(NpgsqlTsVector vector, Single[] weights, NpgsqlTsQuery query, NpgsqlTsRankingNormalization normalization) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objRankCoverDensity = (JCObject)classType.Invoke("RankCoverDensity", vector == null ? null : vector.getJCOInstance(), toObjectFromArray(weights), query == null ? null : query.getJCOInstance(), normalization == null ? null : normalization.getJCOInstance());
            return new Single(objRankCoverDensity);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Single RankCoverDensity(NpgsqlTsVector vector, Single[] weights, NpgsqlTsQuery query) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objRankCoverDensity = (JCObject)classType.Invoke("RankCoverDensity", vector == null ? null : vector.getJCOInstance(), toObjectFromArray(weights), query == null ? null : query.getJCOInstance());
            return new Single(objRankCoverDensity);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String GetQueryTree(NpgsqlTsQuery query) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("GetQueryTree", query == null ? null : query.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String GetResultHeadline(NpgsqlTsQuery query, java.lang.String config, java.lang.String document, java.lang.String options) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("GetResultHeadline", query == null ? null : query.getJCOInstance(), config, document, options);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String GetResultHeadline(NpgsqlTsQuery query, java.lang.String document, java.lang.String options) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("GetResultHeadline", query == null ? null : query.getJCOInstance(), document, options);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String GetResultHeadline(NpgsqlTsQuery query, java.lang.String document) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ObjectDisposedException, system.FormatException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            return (java.lang.String)classType.Invoke("GetResultHeadline", query == null ? null : query.getJCOInstance(), document);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    


    // Instance Events section
    

}