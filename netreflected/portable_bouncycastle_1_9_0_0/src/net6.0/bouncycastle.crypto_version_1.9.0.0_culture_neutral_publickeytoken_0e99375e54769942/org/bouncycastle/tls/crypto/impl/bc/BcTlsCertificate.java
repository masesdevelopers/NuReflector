/*
 *  MIT License
 *
 *  Copyright (c) 2022 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package org.bouncycastle.tls.crypto.impl.bc;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import org.bouncycastle.tls.crypto.impl.bc.BcTlsCrypto;
import org.bouncycastle.asn1.x509.X509CertificateStructure;
import org.bouncycastle.asn1.DerObjectIdentifier;
import org.bouncycastle.asn1.Asn1Encodable;
import org.bouncycastle.crypto.parameters.DHPublicKeyParameters;
import org.bouncycastle.crypto.parameters.DsaPublicKeyParameters;
import org.bouncycastle.crypto.parameters.ECPublicKeyParameters;
import org.bouncycastle.crypto.parameters.Ed25519PublicKeyParameters;
import org.bouncycastle.crypto.parameters.Ed448PublicKeyParameters;
import org.bouncycastle.crypto.parameters.RsaKeyParameters;
import org.bouncycastle.tls.crypto.impl.bc.BcTlsCertificate;
import org.bouncycastle.tls.crypto.TlsCertificate;
import org.bouncycastle.tls.crypto.TlsCertificateImplementation;
import org.bouncycastle.tls.crypto.TlsEncryptor;
import org.bouncycastle.tls.crypto.TlsEncryptorImplementation;
import org.bouncycastle.tls.crypto.TlsVerifier;
import org.bouncycastle.tls.crypto.TlsVerifierImplementation;
import org.bouncycastle.math.BigInteger;


/**
 * The base .NET class managing Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsCertificate, BouncyCastle.Crypto, Version=1.9.0.0, Culture=neutral, PublicKeyToken=0e99375e54769942.
 * <p>
 * 
 * See: <a href="https://docs.microsoft.com/en-us/dotnet/api/Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsCertificate" target="_top">https://docs.microsoft.com/en-us/dotnet/api/Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsCertificate</a>
 */
public class BcTlsCertificate extends NetObject  {
    /**
     * Fully assembly qualified name: BouncyCastle.Crypto, Version=1.9.0.0, Culture=neutral, PublicKeyToken=0e99375e54769942
     */
    public static final String assemblyFullName = "BouncyCastle.Crypto, Version=1.9.0.0, Culture=neutral, PublicKeyToken=0e99375e54769942";
    /**
     * Assembly name: BouncyCastle.Crypto
     */
    public static final String assemblyShortName = "BouncyCastle.Crypto";
    /**
     * Qualified class name: Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsCertificate
     */
    public static final String className = "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsCertificate";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public BcTlsCertificate(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link BcTlsCertificate}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link BcTlsCertificate} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static BcTlsCertificate cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new BcTlsCertificate(from.getJCOInstance());
    }

    // Constructors section
    
    public BcTlsCertificate() throws Throwable {
    }

    public BcTlsCertificate(BcTlsCrypto crypto, byte[] encoding) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException, system.io.IOException, system.io.EndOfStreamException, org.bouncycastle.asn1.Asn1Exception, system.IndexOutOfRangeException, system.InvalidOperationException, org.bouncycastle.asn1.Asn1ParsingException, org.bouncycastle.tls.TlsFatalAlert {
        try {
            // add reference to assemblyName.dll file
            addReference(JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            setJCOInstance((JCObject)classType.NewObject(crypto == null ? null : crypto.getJCOInstance(), encoding));
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public BcTlsCertificate(BcTlsCrypto crypto, X509CertificateStructure certificate) throws Throwable {
        try {
            // add reference to assemblyName.dll file
            addReference(JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            setJCOInstance((JCObject)classType.NewObject(crypto == null ? null : crypto.getJCOInstance(), certificate == null ? null : certificate.getJCOInstance()));
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    
    // Methods section
    
    public boolean SupportsSignatureAlgorithm(short signatureAlgorithm) throws Throwable, system.ArgumentNullException, system.io.IOException, org.bouncycastle.asn1.Asn1Exception, system.ArgumentException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException, org.bouncycastle.tls.TlsFatalAlert, system.NotSupportedException {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            return (boolean)classInstance.Invoke("SupportsSignatureAlgorithm", signatureAlgorithm);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SupportsSignatureAlgorithmCA(short signatureAlgorithm) throws Throwable, system.ArgumentNullException, system.io.IOException, org.bouncycastle.asn1.Asn1Exception, system.ArgumentException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException, org.bouncycastle.tls.TlsFatalAlert, system.NotSupportedException {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            return (boolean)classInstance.Invoke("SupportsSignatureAlgorithmCA", signatureAlgorithm);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public byte[] GetEncoded() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentNullException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            JCObject resultingObjects = (JCObject)classInstance.Invoke("GetEncoded");
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            byte[] resultingArray = new byte[resultingArrayList.size()];
            for(int indexGetEncoded = 0; indexGetEncoded < resultingArrayList.size(); indexGetEncoded++ ) {
				resultingArray[indexGetEncoded] = (byte)resultingArrayList.get(indexGetEncoded);
            }
            return resultingArray;
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public byte[] GetExtension(DerObjectIdentifier extensionOid) throws Throwable, system.PlatformNotSupportedException {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            JCObject resultingObjects = (JCObject)classInstance.Invoke("GetExtension", extensionOid == null ? null : extensionOid.getJCOInstance());
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            byte[] resultingArray = new byte[resultingArrayList.size()];
            for(int indexGetExtension = 0; indexGetExtension < resultingArrayList.size(); indexGetExtension++ ) {
				resultingArray[indexGetExtension] = (byte)resultingArrayList.get(indexGetExtension);
            }
            return resultingArray;
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public short GetLegacySignatureAlgorithm() throws Throwable, system.InvalidOperationException, system.IndexOutOfRangeException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentNullException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, system.io.IOException, system.io.EndOfStreamException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException, org.bouncycastle.tls.TlsFatalAlert {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            return (short)classInstance.Invoke("GetLegacySignatureAlgorithm");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Asn1Encodable GetSigAlgParams() throws Throwable {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objGetSigAlgParams = (JCObject)classInstance.Invoke("GetSigAlgParams");
            return new Asn1Encodable(objGetSigAlgParams);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static X509CertificateStructure ParseCertificate(byte[] encoding) throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.io.IOException, system.io.EndOfStreamException, system.IndexOutOfRangeException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, org.bouncycastle.tls.TlsFatalAlert {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objParseCertificate = (JCObject)classType.Invoke("ParseCertificate", (java.lang.Object)encoding);
            return new X509CertificateStructure(objParseCertificate);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static X509CertificateStructure ParseCertificate(JCORefOut dupParam0) throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.io.IOException, system.io.EndOfStreamException, system.IndexOutOfRangeException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, org.bouncycastle.tls.TlsFatalAlert {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objParseCertificate = (JCObject)classType.Invoke("ParseCertificate", (java.lang.Object)dupParam0.getJCRefOut());
            return new X509CertificateStructure(objParseCertificate);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DHPublicKeyParameters GetPubKeyDH() throws Throwable, system.InvalidOperationException, system.IndexOutOfRangeException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentNullException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, system.io.IOException, system.io.EndOfStreamException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException, org.bouncycastle.tls.TlsFatalAlert {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objGetPubKeyDH = (JCObject)classInstance.Invoke("GetPubKeyDH");
            return new DHPublicKeyParameters(objGetPubKeyDH);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DsaPublicKeyParameters GetPubKeyDss() throws Throwable, system.InvalidOperationException, system.IndexOutOfRangeException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentNullException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, system.io.IOException, system.io.EndOfStreamException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException, org.bouncycastle.tls.TlsFatalAlert {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objGetPubKeyDss = (JCObject)classInstance.Invoke("GetPubKeyDss");
            return new DsaPublicKeyParameters(objGetPubKeyDss);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public ECPublicKeyParameters GetPubKeyEC() throws Throwable, system.InvalidOperationException, system.IndexOutOfRangeException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentNullException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, system.io.IOException, system.io.EndOfStreamException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException, org.bouncycastle.tls.TlsFatalAlert {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objGetPubKeyEC = (JCObject)classInstance.Invoke("GetPubKeyEC");
            return new ECPublicKeyParameters(objGetPubKeyEC);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Ed25519PublicKeyParameters GetPubKeyEd25519() throws Throwable, system.InvalidOperationException, system.IndexOutOfRangeException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentNullException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, system.io.IOException, system.io.EndOfStreamException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException, org.bouncycastle.tls.TlsFatalAlert {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objGetPubKeyEd25519 = (JCObject)classInstance.Invoke("GetPubKeyEd25519");
            return new Ed25519PublicKeyParameters(objGetPubKeyEd25519);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Ed448PublicKeyParameters GetPubKeyEd448() throws Throwable, system.InvalidOperationException, system.IndexOutOfRangeException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentNullException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, system.io.IOException, system.io.EndOfStreamException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException, org.bouncycastle.tls.TlsFatalAlert {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objGetPubKeyEd448 = (JCObject)classInstance.Invoke("GetPubKeyEd448");
            return new Ed448PublicKeyParameters(objGetPubKeyEd448);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public RsaKeyParameters GetPubKeyRsa() throws Throwable, system.InvalidOperationException, system.IndexOutOfRangeException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentNullException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, system.io.IOException, system.io.EndOfStreamException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException, org.bouncycastle.tls.TlsFatalAlert {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objGetPubKeyRsa = (JCObject)classInstance.Invoke("GetPubKeyRsa");
            return new RsaKeyParameters(objGetPubKeyRsa);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BcTlsCertificate Convert(BcTlsCrypto crypto, TlsCertificate certificate) throws Throwable, system.ArgumentNullException, system.io.IOException, system.io.EndOfStreamException, system.ArgumentException, system.IndexOutOfRangeException, system.InvalidOperationException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, org.bouncycastle.tls.TlsFatalAlert {
        if (classType == null)
            throw new UnsupportedOperationException("classType is null.");
        try {
            JCObject objConvert = (JCObject)classType.Invoke("Convert", crypto == null ? null : crypto.getJCOInstance(), certificate == null ? null : certificate.getJCOInstance());
            return new BcTlsCertificate(objConvert);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public TlsCertificate CheckUsageInRole(int tlsCertificateRole) throws Throwable, system.ArgumentNullException, system.io.IOException, org.bouncycastle.asn1.Asn1Exception, system.ArgumentException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, org.bouncycastle.tls.TlsFatalAlert, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objCheckUsageInRole = (JCObject)classInstance.Invoke("CheckUsageInRole", tlsCertificateRole);
            return new TlsCertificateImplementation(objCheckUsageInRole);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public TlsEncryptor CreateEncryptor(int tlsCertificateRole) throws Throwable, system.ArgumentNullException, system.io.IOException, org.bouncycastle.asn1.Asn1Exception, system.ArgumentException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, org.bouncycastle.tls.TlsFatalAlert, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objCreateEncryptor = (JCObject)classInstance.Invoke("CreateEncryptor", tlsCertificateRole);
            return new TlsEncryptorImplementation(objCreateEncryptor);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public TlsVerifier CreateVerifier(short signatureAlgorithm) throws Throwable, system.io.IOException, system.ArgumentException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.ArgumentNullException, org.bouncycastle.tls.TlsFatalAlert, system.InvalidOperationException, system.FormatException, system.ArithmeticException, system.ArgumentOutOfRangeException, org.bouncycastle.security.SecurityUtilityException, system.NotSupportedException, system.ArrayTypeMismatchException {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objCreateVerifier = (JCObject)classInstance.Invoke("CreateVerifier", signatureAlgorithm);
            return new TlsVerifierImplementation(objCreateVerifier);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public TlsVerifier CreateVerifier(int signatureScheme) throws Throwable, system.ArgumentNullException, system.io.IOException, org.bouncycastle.asn1.Asn1Exception, system.ArgumentException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, org.bouncycastle.tls.TlsFatalAlert, system.FormatException, system.ArithmeticException, org.bouncycastle.security.SecurityUtilityException, system.NotSupportedException {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject objCreateVerifier = (JCObject)classInstance.Invoke("CreateVerifier", signatureScheme);
            return new TlsVerifierImplementation(objCreateVerifier);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void ValidateKeyUsage(int keyUsageBits) throws Throwable, system.ArgumentNullException, system.io.IOException, system.io.EndOfStreamException, org.bouncycastle.asn1.Asn1Exception, org.bouncycastle.asn1.Asn1ParsingException, system.ArgumentException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.RankException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, org.bouncycastle.tls.TlsFatalAlert {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("ValidateKeyUsage", keyUsageBits);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    
    public BigInteger getSerialNumber() throws Throwable, system.FormatException {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            JCObject val = (JCObject)classInstance.Get("SerialNumber");
            return new BigInteger(val);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String getSigAlgOid() throws Throwable {
        if (classInstance == null)
            throw new UnsupportedOperationException("classInstance is null.");
        try {
            return (java.lang.String)classInstance.Get("SigAlgOid");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}